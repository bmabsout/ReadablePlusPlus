// Generated from /media/ssd/Dropbox/ReadablePlusPlus/antlr/rppgrammar/rpp.g4 by ANTLR 4.3
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class rppLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__1=1, T__0=2, Class=3, ID=4, Name=5, Type=6, Spaces=7, Tab=8, Tabs=9, 
		LeftParen=10, RightParen=11, LeftBracket=12, Parens=13, RightBracket=14, 
		LeftBrace=15, RightBrace=16, NewLine=17, NewLines=18, Assign=19, Assigns=20, 
		Pointers=21, PostFix=22, PreFix=23, Unary=24, Logic=25, Equal=26, NotEqual=27, 
		Arrow=28, Dot=29, BitWise=30, Binary=31, Operators=32, StorageClass=33, 
		TypeQualifier=34, Inline=35;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'"
	};
	public static final String[] ruleNames = {
		"T__1", "T__0", "Class", "ID", "Name", "Type", "Spaces", "Tab", "Tabs", 
		"LeftParen", "RightParen", "LeftBracket", "Parens", "RightBracket", "LeftBrace", 
		"RightBrace", "NewLine", "NewLines", "Assign", "Assigns", "Pointers", 
		"PostFix", "PreFix", "Unary", "Logic", "Equal", "NotEqual", "Arrow", "Dot", 
		"BitWise", "Binary", "Operators", "Nondigit", "Digit", "StorageClass", 
		"TypeQualifier", "Inline"
	};


	public rppLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "rpp.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2%\u013e\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3"+
		"\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\7\5^\n\5\f\5\16\5a\13\5\3\6\3\6\3\7\3\7"+
		"\7\7g\n\7\f\7\16\7j\13\7\3\b\6\bm\n\b\r\b\16\bn\3\t\3\t\3\n\6\nt\n\n\r"+
		"\n\16\nu\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21"+
		"\3\21\3\22\3\22\5\22\u0088\n\22\3\22\5\22\u008b\n\22\3\22\3\22\3\23\6"+
		"\23\u0090\n\23\r\23\16\23\u0091\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25"+
		"\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25"+
		"\3\25\3\25\5\25\u00ac\n\25\3\26\3\26\3\27\3\27\3\27\3\27\3\27\5\27\u00b5"+
		"\n\27\3\30\3\30\3\30\3\30\3\30\5\30\u00bc\n\30\3\31\3\31\5\31\u00c0\n"+
		"\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\5"+
		"\32\u00cf\n\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36"+
		"\3\37\3\37\3\37\3\37\3\37\5\37\u00e1\n\37\3 \3 \3 \3 \3 \5 \u00e8\n \3"+
		"!\3!\3!\5!\u00ed\n!\3\"\3\"\3#\3#\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$"+
		"\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$\3$"+
		"\3$\3$\3$\3$\3$\3$\3$\3$\3$\5$\u011f\n$\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%"+
		"\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\5%\u0136\n%\3&\3&\3&\3&\3&\3&\3&\2\2"+
		"\'\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20"+
		"\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37"+
		"= ?!A\"C\2E\2G#I$K%\3\2\b\5\2((,,``\5\2##--//\4\2>>@@\6\2((``~~\u0080"+
		"\u0080\5\2C\\aac|\3\2\62;\u0165\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2"+
		"\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2"+
		"\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2"+
		"\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2"+
		"\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2"+
		"\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2"+
		"\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\3M\3\2\2\2\5O\3\2\2\2\7Q\3\2\2\2\tZ"+
		"\3\2\2\2\13b\3\2\2\2\rd\3\2\2\2\17l\3\2\2\2\21p\3\2\2\2\23s\3\2\2\2\25"+
		"w\3\2\2\2\27y\3\2\2\2\31{\3\2\2\2\33}\3\2\2\2\35\177\3\2\2\2\37\u0081"+
		"\3\2\2\2!\u0083\3\2\2\2#\u008a\3\2\2\2%\u008f\3\2\2\2\'\u0093\3\2\2\2"+
		")\u00ab\3\2\2\2+\u00ad\3\2\2\2-\u00b4\3\2\2\2/\u00bb\3\2\2\2\61\u00bf"+
		"\3\2\2\2\63\u00ce\3\2\2\2\65\u00d0\3\2\2\2\67\u00d3\3\2\2\29\u00d6\3\2"+
		"\2\2;\u00d9\3\2\2\2=\u00e0\3\2\2\2?\u00e7\3\2\2\2A\u00ec\3\2\2\2C\u00ee"+
		"\3\2\2\2E\u00f0\3\2\2\2G\u011e\3\2\2\2I\u0135\3\2\2\2K\u0137\3\2\2\2M"+
		"N\7.\2\2N\4\3\2\2\2OP\7=\2\2P\6\3\2\2\2QR\7e\2\2RS\7n\2\2ST\7c\2\2TU\7"+
		"u\2\2UV\7u\2\2VW\3\2\2\2WX\7\"\2\2XY\5\13\6\2Y\b\3\2\2\2Z_\5C\"\2[^\5"+
		"E#\2\\^\5C\"\2][\3\2\2\2]\\\3\2\2\2^a\3\2\2\2_]\3\2\2\2_`\3\2\2\2`\n\3"+
		"\2\2\2a_\3\2\2\2bc\5\t\5\2c\f\3\2\2\2dh\5\t\5\2eg\5+\26\2fe\3\2\2\2gj"+
		"\3\2\2\2hf\3\2\2\2hi\3\2\2\2i\16\3\2\2\2jh\3\2\2\2km\7\"\2\2lk\3\2\2\2"+
		"mn\3\2\2\2nl\3\2\2\2no\3\2\2\2o\20\3\2\2\2pq\7\13\2\2q\22\3\2\2\2rt\5"+
		"\21\t\2sr\3\2\2\2tu\3\2\2\2us\3\2\2\2uv\3\2\2\2v\24\3\2\2\2wx\7*\2\2x"+
		"\26\3\2\2\2yz\7+\2\2z\30\3\2\2\2{|\7]\2\2|\32\3\2\2\2}~\4*+\2~\34\3\2"+
		"\2\2\177\u0080\7_\2\2\u0080\36\3\2\2\2\u0081\u0082\7}\2\2\u0082 \3\2\2"+
		"\2\u0083\u0084\7\177\2\2\u0084\"\3\2\2\2\u0085\u0087\7\17\2\2\u0086\u0088"+
		"\7\f\2\2\u0087\u0086\3\2\2\2\u0087\u0088\3\2\2\2\u0088\u008b\3\2\2\2\u0089"+
		"\u008b\7\f\2\2\u008a\u0085\3\2\2\2\u008a\u0089\3\2\2\2\u008b\u008c\3\2"+
		"\2\2\u008c\u008d\b\22\2\2\u008d$\3\2\2\2\u008e\u0090\5#\22\2\u008f\u008e"+
		"\3\2\2\2\u0090\u0091\3\2\2\2\u0091\u008f\3\2\2\2\u0091\u0092\3\2\2\2\u0092"+
		"&\3\2\2\2\u0093\u0094\7?\2\2\u0094(\3\2\2\2\u0095\u0096\7,\2\2\u0096\u00ac"+
		"\7?\2\2\u0097\u0098\7\61\2\2\u0098\u00ac\7?\2\2\u0099\u009a\7\'\2\2\u009a"+
		"\u00ac\7?\2\2\u009b\u009c\7-\2\2\u009c\u00ac\7?\2\2\u009d\u009e\7/\2\2"+
		"\u009e\u00ac\7?\2\2\u009f\u00a0\7>\2\2\u00a0\u00a1\7>\2\2\u00a1\u00ac"+
		"\7?\2\2\u00a2\u00a3\7@\2\2\u00a3\u00a4\7@\2\2\u00a4\u00ac\7?\2\2\u00a5"+
		"\u00a6\7(\2\2\u00a6\u00ac\7?\2\2\u00a7\u00a8\7`\2\2\u00a8\u00ac\7?\2\2"+
		"\u00a9\u00aa\7~\2\2\u00aa\u00ac\7?\2\2\u00ab\u0095\3\2\2\2\u00ab\u0097"+
		"\3\2\2\2\u00ab\u0099\3\2\2\2\u00ab\u009b\3\2\2\2\u00ab\u009d\3\2\2\2\u00ab"+
		"\u009f\3\2\2\2\u00ab\u00a2\3\2\2\2\u00ab\u00a5\3\2\2\2\u00ab\u00a7\3\2"+
		"\2\2\u00ab\u00a9\3\2\2\2\u00ac*\3\2\2\2\u00ad\u00ae\t\2\2\2\u00ae,\3\2"+
		"\2\2\u00af\u00b0\7-\2\2\u00b0\u00b5\7-\2\2\u00b1\u00b2\7/\2\2\u00b2\u00b5"+
		"\7/\2\2\u00b3\u00b5\5+\26\2\u00b4\u00af\3\2\2\2\u00b4\u00b1\3\2\2\2\u00b4"+
		"\u00b3\3\2\2\2\u00b5.\3\2\2\2\u00b6\u00b7\7-\2\2\u00b7\u00bc\7-\2\2\u00b8"+
		"\u00b9\7/\2\2\u00b9\u00bc\7/\2\2\u00ba\u00bc\t\3\2\2\u00bb\u00b6\3\2\2"+
		"\2\u00bb\u00b8\3\2\2\2\u00bb\u00ba\3\2\2\2\u00bc\60\3\2\2\2\u00bd\u00c0"+
		"\5-\27\2\u00be\u00c0\5/\30\2\u00bf\u00bd\3\2\2\2\u00bf\u00be\3\2\2\2\u00c0"+
		"\62\3\2\2\2\u00c1\u00c2\7~\2\2\u00c2\u00cf\7~\2\2\u00c3\u00c4\7(\2\2\u00c4"+
		"\u00cf\7(\2\2\u00c5\u00c6\7#\2\2\u00c6\u00cf\7?\2\2\u00c7\u00c8\7?\2\2"+
		"\u00c8\u00cf\7?\2\2\u00c9\u00cf\t\4\2\2\u00ca\u00cb\7>\2\2\u00cb\u00cf"+
		"\7?\2\2\u00cc\u00cd\7@\2\2\u00cd\u00cf\7?\2\2\u00ce\u00c1\3\2\2\2\u00ce"+
		"\u00c3\3\2\2\2\u00ce\u00c5\3\2\2\2\u00ce\u00c7\3\2\2\2\u00ce\u00c9\3\2"+
		"\2\2\u00ce\u00ca\3\2\2\2\u00ce\u00cc\3\2\2\2\u00cf\64\3\2\2\2\u00d0\u00d1"+
		"\7?\2\2\u00d1\u00d2\7?\2\2\u00d2\66\3\2\2\2\u00d3\u00d4\7#\2\2\u00d4\u00d5"+
		"\7?\2\2\u00d58\3\2\2\2\u00d6\u00d7\7/\2\2\u00d7\u00d8\7@\2\2\u00d8:\3"+
		"\2\2\2\u00d9\u00da\7\60\2\2\u00da<\3\2\2\2\u00db\u00e1\t\5\2\2\u00dc\u00dd"+
		"\7>\2\2\u00dd\u00e1\7>\2\2\u00de\u00df\7@\2\2\u00df\u00e1\7@\2\2\u00e0"+
		"\u00db\3\2\2\2\u00e0\u00dc\3\2\2\2\u00e0\u00de\3\2\2\2\u00e1>\3\2\2\2"+
		"\u00e2\u00e3\7/\2\2\u00e3\u00e8\7@\2\2\u00e4\u00e8\7\60\2\2\u00e5\u00e8"+
		"\5\63\32\2\u00e6\u00e8\5=\37\2\u00e7\u00e2\3\2\2\2\u00e7\u00e4\3\2\2\2"+
		"\u00e7\u00e5\3\2\2\2\u00e7\u00e6\3\2\2\2\u00e8@\3\2\2\2\u00e9\u00ed\5"+
		")\25\2\u00ea\u00ed\5? \2\u00eb\u00ed\5\61\31\2\u00ec\u00e9\3\2\2\2\u00ec"+
		"\u00ea\3\2\2\2\u00ec\u00eb\3\2\2\2\u00edB\3\2\2\2\u00ee\u00ef\t\6\2\2"+
		"\u00efD\3\2\2\2\u00f0\u00f1\t\7\2\2\u00f1F\3\2\2\2\u00f2\u00f3\7v\2\2"+
		"\u00f3\u00f4\7{\2\2\u00f4\u00f5\7r\2\2\u00f5\u00f6\7g\2\2\u00f6\u00f7"+
		"\7f\2\2\u00f7\u00f8\7g\2\2\u00f8\u011f\7h\2\2\u00f9\u00fa\7g\2\2\u00fa"+
		"\u00fb\7z\2\2\u00fb\u00fc\7v\2\2\u00fc\u00fd\7g\2\2\u00fd\u00fe\7t\2\2"+
		"\u00fe\u011f\7p\2\2\u00ff\u0100\7u\2\2\u0100\u0101\7v\2\2\u0101\u0102"+
		"\7c\2\2\u0102\u0103\7v\2\2\u0103\u0104\7k\2\2\u0104\u011f\7e\2\2\u0105"+
		"\u0106\7a\2\2\u0106\u0107\7V\2\2\u0107\u0108\7j\2\2\u0108\u0109\7t\2\2"+
		"\u0109\u010a\7g\2\2\u010a\u010b\7c\2\2\u010b\u010c\7f\2\2\u010c\u010d"+
		"\7a\2\2\u010d\u010e\7n\2\2\u010e\u010f\7q\2\2\u010f\u0110\7e\2\2\u0110"+
		"\u0111\7c\2\2\u0111\u011f\7n\2\2\u0112\u0113\7c\2\2\u0113\u0114\7w\2\2"+
		"\u0114\u0115\7v\2\2\u0115\u011f\7q\2\2\u0116\u0117\7t\2\2\u0117\u0118"+
		"\7g\2\2\u0118\u0119\7i\2\2\u0119\u011a\7k\2\2\u011a\u011b\7u\2\2\u011b"+
		"\u011c\7v\2\2\u011c\u011d\7g\2\2\u011d\u011f\7t\2\2\u011e\u00f2\3\2\2"+
		"\2\u011e\u00f9\3\2\2\2\u011e\u00ff\3\2\2\2\u011e\u0105\3\2\2\2\u011e\u0112"+
		"\3\2\2\2\u011e\u0116\3\2\2\2\u011fH\3\2\2\2\u0120\u0121\7e\2\2\u0121\u0122"+
		"\7q\2\2\u0122\u0123\7p\2\2\u0123\u0124\7u\2\2\u0124\u0136\7v\2\2\u0125"+
		"\u0126\7t\2\2\u0126\u0127\7g\2\2\u0127\u0128\7u\2\2\u0128\u0129\7v\2\2"+
		"\u0129\u012a\7t\2\2\u012a\u012b\7k\2\2\u012b\u012c\7e\2\2\u012c\u0136"+
		"\7v\2\2\u012d\u012e\7x\2\2\u012e\u012f\7q\2\2\u012f\u0130\7n\2\2\u0130"+
		"\u0131\7c\2\2\u0131\u0132\7v\2\2\u0132\u0133\7k\2\2\u0133\u0134\7n\2\2"+
		"\u0134\u0136\7g\2\2\u0135\u0120\3\2\2\2\u0135\u0125\3\2\2\2\u0135\u012d"+
		"\3\2\2\2\u0136J\3\2\2\2\u0137\u0138\7k\2\2\u0138\u0139\7p\2\2\u0139\u013a"+
		"\7n\2\2\u013a\u013b\7k\2\2\u013b\u013c\7p\2\2\u013c\u013d\7g\2\2\u013d"+
		"L\3\2\2\2\25\2]_hnu\u0087\u008a\u0091\u00ab\u00b4\u00bb\u00bf\u00ce\u00e0"+
		"\u00e7\u00ec\u011e\u0135\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}